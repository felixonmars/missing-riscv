src
└── primecount
    ├── ChangeLog
    ├── cmake
    │   ├── Apple_ARM64.cmake
    │   ├── compiler_supports_cpp11.cmake
    │   ├── int128_t.cmake
    │   ├── multiarch_arm_sve.cmake
    │   ├── multiarch_avx512_vpopcnt.cmake
    │   ├── multiarch_x86_popcnt.cmake
    │   └── OpenMP.cmake
    ├── CMakeLists.txt
    ├── COPYING
    ├── doc
    │   ├── alpha-factor-dr.nb
    │   ├── alpha-factor-dr.pdf
    │   ├── alpha-factor-gourdon.nb
    │   ├── alpha-factor-gourdon.pdf
    │   ├── alpha-factor-lmo.nb
    │   ├── alpha-factor-lmo.pdf
    │   ├── BUILD.md
    │   ├── Credits.md
    │   ├── Easy-Special-Leaves.md
    │   ├── Hard-Special-Leaves.md
    │   ├── libprimecount.md
    │   ├── Partial-Sieve-Function.md
    │   ├── primecount.1
    │   ├── primecount.txt
    │   ├── README.md
    │   ├── Records.md
    │   ├── References.md
    │   └── RELEASE.md
    ├── include
    │   ├── BaseFactorTable.hpp
    │   ├── BinaryIndexedTree.hpp
    │   ├── BitSieve240.hpp
    │   ├── calculator.hpp
    │   ├── cpu_supports_arm_sve.hpp
    │   ├── cpu_supports_avx512_vpopcnt.hpp
    │   ├── cpu_supports_popcnt.hpp
    │   ├── FactorTableD.hpp
    │   ├── FactorTable.hpp
    │   ├── fast_div.hpp
    │   ├── generate_primes.hpp
    │   ├── gourdon.hpp
    │   ├── imath.hpp
    │   ├── int128_OpenMP_patch.hpp
    │   ├── int128_t.hpp
    │   ├── isqrt.hpp
    │   ├── libdivide.h
    │   ├── LoadBalancerAC.hpp
    │   ├── LoadBalancerP2.hpp
    │   ├── LoadBalancerS2.hpp
    │   ├── macros.hpp
    │   ├── min.hpp
    │   ├── OmpLock.hpp
    │   ├── PhiTiny.hpp
    │   ├── phi_vector.hpp
    │   ├── PiTable.hpp
    │   ├── popcnt.hpp
    │   ├── primecount-config.hpp
    │   ├── primecount.h
    │   ├── primecount.hpp
    │   ├── primecount-internal.hpp
    │   ├── print.hpp
    │   ├── RelaxedAtomic.hpp
    │   ├── SegmentedPiTable.hpp
    │   ├── S.hpp
    │   ├── Sieve.hpp
    │   ├── StatusS2.hpp
    │   └── Vector.hpp
    ├── lib
    │   └── primesieve
    │       ├── ChangeLog
    │       ├── cmake
    │       │   ├── auto_vectorization.cmake
    │       │   ├── libatomic.cmake
    │       │   ├── multiarch_avx512_vbmi2.cmake
    │       │   ├── multiarch_x86_popcnt.cmake
    │       │   └── primesieveConfig.cmake.in
    │       ├── CMakeLists.txt
    │       ├── COPYING
    │       ├── doc
    │       │   ├── ALGORITHMS.md
    │       │   ├── BUILD.md
    │       │   ├── C_API.md
    │       │   ├── CMakeLists.txt
    │       │   ├── CPP_API.md
    │       │   ├── Doxyfile.in
    │       │   ├── mainpage.dox
    │       │   ├── primesieve.1
    │       │   ├── primesieve.txt
    │       │   ├── README.md
    │       │   └── RELEASE.md
    │       ├── examples
    │       │   ├── c
    │       │   │   ├── CMakeLists.txt
    │       │   │   ├── count_primes.c
    │       │   │   ├── nth_prime.c
    │       │   │   ├── prev_prime.c
    │       │   │   ├── primes_array.c
    │       │   │   └── primesieve_iterator.c
    │       │   ├── CMakeLists.txt
    │       │   ├── cpp
    │       │   │   ├── CMakeLists.txt
    │       │   │   ├── count_primes.cpp
    │       │   │   ├── nth_prime.cpp
    │       │   │   ├── prev_prime.cpp
    │       │   │   ├── primesieve_iterator.cpp
    │       │   │   └── primes_vector.cpp
    │       │   └── README.md
    │       ├── include
    │       │   ├── primesieve
    │       │   │   ├── bits.hpp
    │       │   │   ├── Bucket.hpp
    │       │   │   ├── calculator.hpp
    │       │   │   ├── config.hpp
    │       │   │   ├── CountPrintPrimes.hpp
    │       │   │   ├── cpuid.hpp
    │       │   │   ├── CpuInfo.hpp
    │       │   │   ├── cpu_supports_avx512_vbmi2.hpp
    │       │   │   ├── cpu_supports_popcnt.hpp
    │       │   │   ├── ctz.hpp
    │       │   │   ├── EratBig.hpp
    │       │   │   ├── Erat.hpp
    │       │   │   ├── EratMedium.hpp
    │       │   │   ├── EratSmall.hpp
    │       │   │   ├── forward.hpp
    │       │   │   ├── iterator.h
    │       │   │   ├── IteratorHelper.hpp
    │       │   │   ├── iterator.hpp
    │       │   │   ├── littleendian_cast.hpp
    │       │   │   ├── macros.hpp
    │       │   │   ├── malloc_vector.hpp
    │       │   │   ├── MemoryPool.hpp
    │       │   │   ├── ParallelSieve.hpp
    │       │   │   ├── pmath.hpp
    │       │   │   ├── popcnt.hpp
    │       │   │   ├── PreSieve.hpp
    │       │   │   ├── PrimeGenerator.hpp
    │       │   │   ├── primesieve_error.hpp
    │       │   │   ├── PrimeSieve.hpp
    │       │   │   ├── RiemannR.hpp
    │       │   │   ├── SievingPrimes.hpp
    │       │   │   ├── StorePrimes.hpp
    │       │   │   ├── Vector.hpp
    │       │   │   └── Wheel.hpp
    │       │   ├── primesieve.h
    │       │   └── primesieve.hpp
    │       ├── primesieve.pc.in
    │       ├── README.md
    │       ├── scripts
    │       │   ├── build_clang_multiarch_win_x64.bat
    │       │   ├── build_mingw64_arm64.sh
    │       │   ├── build_mingw64_x64.sh
    │       │   ├── fastest_sieve_size.sh
    │       │   └── update_version.sh
    │       ├── src
    │       │   ├── api-c.cpp
    │       │   ├── api.cpp
    │       │   ├── app
    │       │   │   ├── CmdOptions.cpp
    │       │   │   ├── CmdOptions.hpp
    │       │   │   ├── help.cpp
    │       │   │   ├── main.cpp
    │       │   │   ├── stressTest.cpp
    │       │   │   └── test.cpp
    │       │   ├── CountPrintPrimes.cpp
    │       │   ├── CpuInfo.cpp
    │       │   ├── EratBig.cpp
    │       │   ├── Erat.cpp
    │       │   ├── EratMedium.cpp
    │       │   ├── EratSmall.cpp
    │       │   ├── iterator-c.cpp
    │       │   ├── iterator.cpp
    │       │   ├── IteratorHelper.cpp
    │       │   ├── LookupTables.cpp
    │       │   ├── MemoryPool.cpp
    │       │   ├── nthPrime.cpp
    │       │   ├── ParallelSieve.cpp
    │       │   ├── popcount.cpp
    │       │   ├── PreSieve.cpp
    │       │   ├── PrimeGenerator.cpp
    │       │   ├── PrimeSieve.cpp
    │       │   ├── README.md
    │       │   ├── RiemannR.cpp
    │       │   ├── SievingPrimes.cpp
    │       │   └── x86
    │       │       └── cpuid.cpp
    │       └── test
    │           ├── calculator.cpp
    │           ├── clear_primesieve_iterator1.cpp
    │           ├── clear_primesieve_iterator2.c
    │           ├── CMakeLists.txt
    │           ├── count_primes1.cpp
    │           ├── count_primes2.cpp
    │           ├── count_primes3.cpp
    │           ├── count_quadruplets.cpp
    │           ├── count_quintuplets.cpp
    │           ├── count_sextuplets.cpp
    │           ├── count_triplets.cpp
    │           ├── count_twins.cpp
    │           ├── cpuid.cpp
    │           ├── cpu_info.cpp
    │           ├── floorPow2.cpp
    │           ├── generate_n_primes1.cpp
    │           ├── generate_n_primes2.c
    │           ├── generate_primes1.cpp
    │           ├── generate_primes2.c
    │           ├── ilog2.cpp
    │           ├── isqrt_constexpr.cpp
    │           ├── isqrt.cpp
    │           ├── move_primesieve_iterator.cpp
    │           ├── next_prime1.cpp
    │           ├── next_prime2.c
    │           ├── nth_prime1.cpp
    │           ├── nth_prime2.cpp
    │           ├── nth_prime3.cpp
    │           ├── number_of_bits.cpp
    │           ├── prev_prime1.cpp
    │           ├── prev_prime2.c
    │           ├── README.md
    │           ├── Riemann_R.cpp
    │           ├── skipto_next_prime.c
    │           ├── skipto_prev_prime.c
    │           └── vector.cpp
    ├── primecount.pc.in
    ├── README.md
    ├── scripts
    │   ├── benchmark-vs-prev-release.sh
    │   ├── build_clang_multiarch_win_x64.bat
    │   ├── build_mingw64_arm64.sh
    │   ├── build_mingw64_x64.sh
    │   ├── find_fastest_alpha_dr.sh
    │   ├── find_fastest_alpha_gourdon.sh
    │   ├── find_fastest_alpha_lmo.sh
    │   ├── find_optimal_alpha_dr.sh
    │   ├── find_optimal_alpha_gourdon.sh
    │   ├── find_optimal_alpha_lmo.sh
    │   ├── generate_html_benchmarks.sh
    │   ├── gen_tests_dr.sh
    │   ├── gen_tests_gourdon1.sh
    │   ├── gen_tests_gourdon2.sh
    │   ├── gen_tests_s1.sh
    │   ├── Li_accuracy.sh
    │   ├── RiemannR_accuracy.sh
    │   ├── status_curve_fitting.cpp
    │   ├── update_libprimesieve.sh
    │   ├── update_version.sh
    │   └── worktodo.sh
    ├── src
    │   ├── api_c.cpp
    │   ├── api.cpp
    │   ├── app
    │   │   ├── CmdOptions.cpp
    │   │   ├── CmdOptions.hpp
    │   │   ├── help.cpp
    │   │   ├── main.cpp
    │   │   └── test.cpp
    │   ├── BitSieve240.cpp
    │   ├── deleglise-rivat
    │   │   ├── pi_deleglise_rivat.cpp
    │   │   ├── S2_easy.cpp
    │   │   ├── S2_easy_libdivide.cpp
    │   │   ├── S2_hard.cpp
    │   │   └── S2_trivial.cpp
    │   ├── FactorTable.cpp
    │   ├── generate_primes.cpp
    │   ├── gourdon
    │   │   ├── AC.cpp
    │   │   ├── AC_libdivide.cpp
    │   │   ├── B.cpp
    │   │   ├── D.cpp
    │   │   ├── LoadBalancerAC.cpp
    │   │   ├── Phi0.cpp
    │   │   ├── pi_gourdon.cpp
    │   │   ├── SegmentedPiTable.cpp
    │   │   └── Sigma.cpp
    │   ├── lmo
    │   │   ├── pi_lmo1.cpp
    │   │   ├── pi_lmo2.cpp
    │   │   ├── pi_lmo3.cpp
    │   │   ├── pi_lmo4.cpp
    │   │   ├── pi_lmo5.cpp
    │   │   └── pi_lmo_parallel.cpp
    │   ├── LoadBalancerP2.cpp
    │   ├── LoadBalancerS2.cpp
    │   ├── LogarithmicIntegral.cpp
    │   ├── nth_prime.cpp
    │   ├── P2.cpp
    │   ├── P3.cpp
    │   ├── phi.cpp
    │   ├── PhiTiny.cpp
    │   ├── phi_vector.cpp
    │   ├── pi_legendre.cpp
    │   ├── pi_lehmer.cpp
    │   ├── pi_meissel.cpp
    │   ├── pi_primesieve.cpp
    │   ├── PiTable.cpp
    │   ├── print.cpp
    │   ├── RiemannR.cpp
    │   ├── S1.cpp
    │   ├── Sieve.cpp
    │   ├── StatusS2.cpp
    │   ├── util.cpp
    │   └── x86
    │       └── cpuid.cpp
    └── test
        ├── api
        │   ├── api_c.c
        │   ├── api.cpp
        │   ├── CMakeLists.txt
        │   └── nth_prime.cpp
        ├── calculator.cpp
        ├── CMakeLists.txt
        ├── cpuid.cpp
        ├── deleglise-rivat
        │   ├── alpha_deleglise_rivat.cpp
        │   ├── CMakeLists.txt
        │   ├── pi_deleglise_rivat.cpp
        │   ├── S2.cpp
        │   ├── S2_easy_alpha.cpp
        │   ├── S2_easy.cpp
        │   ├── S2_hard_alpha.cpp
        │   ├── S2_hard.cpp
        │   ├── S2_trivial_alpha.cpp
        │   └── S2_trivial.cpp
        ├── fast_div.cpp
        ├── generate_lpf.cpp
        ├── generate_pi.cpp
        ├── gourdon
        │   ├── AC.cpp
        │   ├── alpha_y.cpp
        │   ├── alpha_z.cpp
        │   ├── B.cpp
        │   ├── CMakeLists.txt
        │   ├── D.cpp
        │   ├── FactorTableD.cpp
        │   ├── Phi0.cpp
        │   ├── pi_gourdon.cpp
        │   ├── SegmentedPiTable.cpp
        │   └── Sigma.cpp
        ├── ilog2.cpp
        ├── int128.cpp
        ├── ipow.cpp
        ├── iroot.cpp
        ├── isqrt_constexpr.cpp
        ├── isqrt.cpp
        ├── libdivide.cpp
        ├── Li.cpp
        ├── lmo
        │   ├── alpha_lmo.cpp
        │   ├── BinaryIndexedTree.cpp
        │   ├── CMakeLists.txt
        │   ├── FactorTable.cpp
        │   ├── pi_lmo1.cpp
        │   ├── pi_lmo2.cpp
        │   ├── pi_lmo3.cpp
        │   ├── pi_lmo4.cpp
        │   ├── pi_lmo5.cpp
        │   ├── pi_lmo_parallel.cpp
        │   ├── S1_alpha.cpp
        │   └── S1.cpp
        ├── min.cpp
        ├── moebius.cpp
        ├── next_power_of_2.cpp
        ├── nth_prime_tiny.cpp
        ├── P2.cpp
        ├── P3.cpp
        ├── phi.cpp
        ├── phi_tiny.cpp
        ├── phi_vector.cpp
        ├── pi_cache.cpp
        ├── pi_legendre.cpp
        ├── pi_lehmer.cpp
        ├── pi_meissel.cpp
        ├── pi_primesieve.cpp
        ├── PiTable.cpp
        ├── README.md
        ├── Riemann_R.cpp
        ├── sieve1.cpp
        ├── sieve2.cpp
        └── vector.cpp

31 directories, 352 files
